#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    chosen {
        zmk,matrix_transform = &default_transform;

        //zmk,matrix_transform = &five_column_transform;
    };
};

/ {
    behaviors {
        homerow: homerow {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <240>;
            flavor = "tap-preferred";
            quick-tap-ms = <200>;
            require-prior-idle-ms = <160>;
            hold-trigger-key-positions = <36 38 37 39 40 41>;
            hold-trigger-on-release;
        };

        index: index {
            compatible = "zmk,behavior-hold-tap";
            label = "INDEX";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            flavor = "tap-preferred";
            hold-trigger-on-release;
            hold-trigger-key-positions = <36 37 38 39 40 41>;
            tapping-term-ms = <180>;
            require-prior-idle-ms = <100>;
            quick-tap-ms = <300>;
        };

        thumb: thumb {
            compatible = "zmk,behavior-hold-tap";
            label = "THUMB";
            bindings = <&mo>, <&kp>;

            #binding-cells = <2>;
            flavor = "balanced";
            quick-tap-ms = <300>;
            tapping-term-ms = <200>;
        };
    };

    combos {
        compatible = "zmk,combos";

        TO_GAMING {
            bindings = <&tog 5>;
            key-positions = <37 38>;
            layers = <0>;
        };

        gaming_off {
            bindings = <&to 0>;
            key-positions = <39 40>;
            layers = <5>;
        };
    };

    macros {
        select_line: select_line {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp HOME &kp LS(END)>;
            label = "SELECT_LINE";
            wait-ms = <1>;
            tap-ms = <1>;
        };

        select_word: select_word {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LC(RIGHT) &kp LC(LEFT) &kp LC(LS(RIGHT))>;
            label = "SELECT_WORD";
            wait-ms = <1>;
            tap-ms = <1>;
        };

        select_none: select_none {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp DOWN &kp UP &kp RIGHT &kp LEFT>;
            label = "SELECT_NONE";
        };

        select_all: select_all {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LC(A)>;
            label = "SELECT_ALL";
            wait-ms = <1>;
            tap-ms = <1>;
        };

        mac_shot: mac_shot {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LS(LG(LC(N4)))>;
            label = "MAC_SHOT";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default {
            label = "QWERTY";

            // -----------------------------------------------------------------------------------------
            // | TAB  |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X (GUI)  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  / (GUI)  | SHFT |
            //                          | LALT | SPC | SYM |   | FUNC / ENTER | SPC  | RALT |

            bindings = <
&kp GRAVE  &kp Q            &kp W            &kp E                    &kp R               &kp T           &kp Y      &kp U            &kp I             &kp O            &kp P               &kp BACKSLASH
&kp LCTRL  &homerow LGUI A  &homerow LALT S  &homerow LEFT_CONTROL D  &index LSHFT F      &kp G           &kp H      &index RSHIFT J  &homerow RCTRL K  &homerow RALT L  &homerow RGUI SEMI  &kp SQT
&kp LSHFT  &kp Z            &kp X            &kp C                    &kp V               &kp B           &kp N      &kp M            &kp COMMA         &kp DOT          &kp SLASH           &kp RSHFT
                                             &thumb 4 DEL             &thumb 1 BACKSPACE  &thumb 2 ESC    &kp ENTER  &thumb 3 SPACE   &kp TAB
            >;
        };

        cursor {
            label = "cursor";

            // -----------------------------------------------------------------------------------------
            // | F1 |  F2  |  F3  |  F4  |  F5  |  F6  |   | PGUP  | PGDN |  Home   |  END  |    |       |
            // | F7 |  F8  |  F9  |  F10  |  F11  |  F12  |   | LEFT | UP  |  DWN  | RGHT  |   \   |   `   |
            // | SHFT |  BT0 |  BT1 |  BT2 | BT3 | BT CLR |   |    | <-   |  sk shift   |  ->  | CLOCK | CWORD |
            //                          | LALT | SPC | SYM |   | FUNC / ENTER | SPC  | RALT |

            bindings = <
&kp LC(K)  &sk LSHIFT   &kp LC(LS(Z))  &kp LC(Z)     &kp BACKSPACE  &kp LC(X)    &kp LC(X)    &kp LC(F)     &kp LC(LS(G))  &kp LC(G)  &sk RSHFT  &kp LC(K)
&kp LC(L)  &kp LGUI     &kp LALT       &kp LCTRL     &kp LSHFT      &kp LC(C)    &kp LC(C)    &kp LEFT      &kp UP         &kp DOWN   &kp RIGHT  &kp LC(L)
&kp LC(J)  &select_all  &select_line   &select_word  &select_none   &kp LC(V)    &kp LC(V)    &kp HOME      &sk PG_UP      &kp PG_DN  &kp END    &kp LC(J)
                                       &tog 1        &none          &mac_shot    &select_all  &select_word  &select_none
            >;
        };

        number {
            bindings = <
&trans  &trans       &kp LC(LS(Z))  &kp LC(Z)     &kp BACKSPACE  &kp A    &kp LS(N5)     &kp N7  &kp N8   &kp N9  &kp LS(COLON)  &kp K
&trans  &kp LGUI     &kp LALT       &kp LCTRL     &kp LSHFT      &kp B    &kp LS(EQUAL)  &kp N4  &kp N5   &kp N6  &kp MINUS      &kp J
&trans  &select_all  &select_line   &select_none  &kp LS(UNDER)  &kp C    &kp LS(N8)     &kp N3  &kp N2   &kp N1  &kp FSLH       &kp G
                                    &trans        &trans         &none    &kp COMMA      &kp N0  &kp DOT
            >;

            label = "Number";
        };

        symbol {
            bindings = <
&kp LS(EXCL)   &kp LS(LBRC)   &kp LBKT      &kp RBKT       &kp LS(RBRC)  &kp LS(QMARK)    &kp LS(AMPS)   &none      &none      &none     &none     &none
&kp LS(POUND)  &kp LS(CARET)  &kp EQUAL     &kp LS(UNDER)  &kp LS(DLLR)  &kp LS(STAR)     &kp LS(TILDE)  &kp RSHFT  &kp LCTRL  &kp RALT  &kp RGUI  &none
&kp LS(AT)     &kp LS(LT)     &kp LS(PIPE)  &kp MINUS      &kp LS(GT)    &kp FSLH         &kp LS(PLUS)   &none      &none      &none     &none     &none
                                            &kp LS(PRCNT)  &kp LS(LPAR)  &kp LS(RPAR)     &none          &none      &none
            >;

            label = "Symbol";
        };

        Function {
            bindings = <
&bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &bt BT_CLR    &kp K_VOLUME_UP    &kp F7         &kp F8         &kp F9  &kp F10  &kp C_BRIGHTNESS_INC
&none         &kp LGUI      &kp LALT      &kp LCTRL     &kp LSHFT     &none         &kp K_VOLUME_DOWN  &kp F4         &kp F5         &kp F6  &kp F11  &kp C_BRIGHTNESS_DEC
&kp CAPSLOCK  &select_all   &select_line  &select_word  &select_none  &none         &kp K_MUTE         &kp F1         &kp F2         &kp F3  &kp F12  &kp C_BRIGHTNESS_AUTO
                                          &none         &none         &none         &mac_shot          &kp LC(MINUS)  &kp LC(EQUAL)
            >;

            label = "Function";
        };

        gaming_layer {
            label = "GAME";
            bindings = <
&kp TAB    &kp Q  &kp W  &kp E    &kp R      &kp T      &kp Y      &kp U            &kp I             &kp O            &kp P               &kp BACKSLASH
&kp LCTRL  &kp A  &kp S  &kp D    &kp F      &kp G      &kp H      &index RSHIFT J  &homerow RCTRL K  &homerow RALT L  &homerow RGUI SEMI  &kp SQT
&kp LSHFT  &kp Z  &kp X  &kp C    &kp V      &kp B      &kp N      &kp M            &kp COMMA         &kp DOT          &kp SLASH           &kp RSHFT
                         &kp DEL  &kp SPACE  &kp ESC    &kp ENTER  &kp BACKSPACE    &kp TAB
            >;
        };
    };
};
